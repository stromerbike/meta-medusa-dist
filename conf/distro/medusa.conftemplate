# Git hash
BUILD_ID = "${MEDUSA_METADATA_GIT_HASH}"

# Distro naming
DISTRO = "medusa"
DISTRO_NAME = "Stromer Medusa"
DISTRO_CODENAME = "${MEDUSA_METADATA_CODENAME}"
DISTRO_VERSION = "${MEDUSA_METADATA_GIT_DATE_TIME}-${MEDUSA_METADATA_GIT_HASH_SHORT}${MEDUSA_METADATA_VARIANT}"
OS_RELEASE_FIELDS_append_pn-os-release = " BUILD_ID"
hostname_pn-base-files = "${DISTRO}"

# Image naming
IMAGE_LINK_NAME = "${IMAGE_BASENAME}"
IMAGE_NAME = "${IMAGE_BASENAME}-${MEDUSA_METADATA_CODENAME}-${MEDUSA_METADATA_GIT_DATE_TIME}-${MEDUSA_METADATA_GIT_HASH_SHORT}${MEDUSA_METADATA_VARIANT}"

# SDK naming
SDK_NAME = "${DISTRO}-${SDK_ARCH}"
SDK_VERSION = "${MEDUSA_METADATA_GIT_DATE_TIME}-${MEDUSA_METADATA_GIT_HASH_SHORT}${MEDUSA_METADATA_VARIANT}"
SDKPATH = "/opt/${DISTRO}/${MEDUSA_METADATA_GIT_DATE_TIME}-${MEDUSA_METADATA_GIT_HASH_SHORT}${MEDUSA_METADATA_VARIANT}"

# Distro features
DISTRO_FEATURES = "${DISTRO_FEATURES_LIBC} fbdev pam systemd"
DISTRO_FEATURES_BACKFILL_CONSIDERED += "ldconfig"

# Locales
GLIBC_GENERATE_LOCALES = "en_US.UTF-8"

# Machine features
MACHINE_FEATURES_append = " 3g bluetooth can usbhost wifi"

# Virtual runtime settings
VIRTUAL-RUNTIME_dev_manager = "udev"
VIRTUAL-RUNTIME_init_manager = "systemd"
DISTRO_FEATURES_BACKFILL_CONSIDERED += "sysvinit"
VIRTUAL-RUNTIME_login_manager = "shadow-base"
VIRTUAL-RUNTIME_syslog = ""
VIRTUAL-RUNTIME_initscripts = ""

# systemd settings
SYSTEMD_DEFAULT_TARGET = "started.target"

# Remove QML software renderer
RDEPENDS_qtbase_remove += "opengldummy qtdeclarative-render2d"

# Mask Escatec packagegroups appends since we use our own image
BBMASK += "meta-medusa-bsp/recipes-extended/packagegroups"

# Mask Escatec service recipes since we use our own
BBMASK += "meta-medusa-bsp/recipes-rootfs/copy2roofs"

# Uncomment this to skip medusa image appends.
#BBMASK += "meta-medusa-app/recipes-image/"

# Uncomment this to install SDMA firmware.
#SRC_URI_append_pn-linux-mainline = " file://sdma-imx.cfg"
#IMAGE_INSTALL_append = " sdma-firmware"

# Uncomment this to install qt exmaples.
#PACKAGECONFIG_append_pn-qtbase = " examples"
#IMAGE_INSTALL_append = " qtbase-examples"

# Uncomment this to enable JTAG in kernel.
#SRC_URI_append_pn-linux-mainline = " file://jtag-pm.patch"

# Activate config checker
INHERIT += "sanity"

# Run QA tests on recipes
INHERIT += "recipe_sanity"

# Run QA tests on builds and packages and log them
INHERIT += "insane"
QA_LOG = "1"

# Log information on images and packages
INHERIT += "buildhistory"
BUILDHISTORY_COMMIT = "1"
INHERIT += "buildstats"

# fuse-exfat mirror
SRC_URI_remove_pn-fuse-exfat = "${DEBIAN_MIRROR}/main/f/fuse-exfat/fuse-exfat_${PV}.orig.tar.gz"
SRC_URI_append_pn-fuse-exfat = "http://ports.ubuntu.com/ubuntu-ports/pool/universe/f/fuse-exfat/fuse-exfat_${PV}.orig.tar.gz"

# gtest master/main name change
SRC_URI_remove_pn-gtest = "git://github.com/google/googletest.git;protocol=https;"
SRC_URI_append_pn-gtest = "git://github.com/google/googletest.git;protocol=https;branch=main"
SRC_URI_remove_pn-breakpad = "git://github.com/google/googletest.git;destsuffix=git/src/testing/gtest;name=gtest"
SRC_URI_remove_pn-breakpad = "git://github.com/google/googletest.git;destsuffix=git/src/testing/gtest;name=gtest;branch=main"
SRC_URI_remove_pn-breakpad-native = "git://github.com/google/googletest.git;destsuffix=git/src/testing/gtest;name=gtest"
SRC_URI_remove_pn-breakpad-native = "git://github.com/google/googletest.git;destsuffix=git/src/testing/gtest;name=gtest;branch=main"

# lsof mirror
SRC_URI_remove_pn-lsof = "http://www.mirrorservice.org/sites/lsof.itap.purdue.edu/pub/tools/unix/lsof/lsof_${PV}.tar.bz2"
SRC_URI_append_pn-lsof = "https://ftp.osuosl.org/pub/blfs/conglomeration/lsof/lsof_${PV}.tar.bz2"

# lz4 master/dev name change
SRC_URI_remove_pn-lz4-native = "git://github.com/lz4/lz4.git"
SRC_URI_append_pn-lz4-native = "git://github.com/lz4/lz4.git;branch=dev"

# systemd master/main name change
SRC_URI_remove_pn-systemd = "git://github.com/systemd/systemd.git;protocol=git"
SRC_URI_append_pn-systemd = "git://github.com/systemd/systemd.git;protocol=git;branch=main"

# wvdial and wvstreams mirrors
SRC_URI_remove_pn-wvdial = "http://${BPN}.googlecode.com/files/${BP}.tar.bz2"
SRC_URI_append_pn-wvdial = "https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/${BPN}/${BP}.tar.bz2"
SRC_URI_remove_pn-wvstreams = "http://${BPN}.googlecode.com/files/${BP}.tar.gz"
SRC_URI_append_pn-wvstreams = "https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/${BPN}/${BP}.tar.gz"

# Phytec git mirrors
#GIT_URL_pn-barebox = "git://git@git.stromerbike.com/st2/barebox.git;protocol=ssh"
#GIT_URL_pn-barebox-targettools = "git://git@git.stromerbike.com/st2/barebox.git;protocol=ssh"

# Set empty root password and add user
INHERIT += "extrausers"
EXTRA_USERS_PARAMS = "usermod -p '' root; usermod -s /bin/bash root; \
                      useradd -p '' user; usermod -s /bin/bash user; usermod -G systemd-journal user; \
"

# Mount rootfs as read-only for incremental firmware update
EXTRA_IMAGE_FEATURES = "debug-tweaks read-only-rootfs"

# Do not symlink log to a volatile storage in order to have a persistent systemd journal
VOLATILE_LOG_DIR = "no"

# Install libpthread and libthread_db in /lib/.debug for gdb
# Remark: Everything else in /lib/.debug is removed in glibc_%.bbappend
IMAGE_INSTALL_append = " ${TCLIBC}-dbg "
PACKAGE_DEBUG_SPLIT_STYLE = "debug-without-src"

# Source mirror settings
SOURCE_MIRROR_URL = "https://gitlab-yocto-mirror.stromerbike.com/downloads/"
INHERIT += "own-mirrors"

# State mirror settings
BB_HASHSERVE = ""
BB_SIGNATURE_HANDLER = "OEBasicHash"
SSTATE_MIRRORS ?= "file://.* https://gitlab-yocto-mirror.stromerbike.com/sstate-cache/PATH;downloadfilename=PATH"
