diff --git a/src/lnav_config.cc b/src/lnav_config.cc
index 4e9396a0..8f2e77bc 100644
--- a/src/lnav_config.cc
+++ b/src/lnav_config.cc
@@ -1448,10 +1448,6 @@ load_config(const std::vector<ghc::filesystem::path>& extra_paths,
         auto write_res = lnav::filesystem::write_file(sample_path,
                                                       bsf.to_string_fragment());
         if (write_res.isErr()) {
-            fprintf(stderr,
-                    "error:unable to write default config file: %s -- %s\n",
-                    sample_path.c_str(),
-                    write_res.unwrapErr().c_str());
         }
     }
 
diff --git a/src/log_format_loader.cc b/src/log_format_loader.cc
index ba895f7b..dee2c350 100644
--- a/src/log_format_loader.cc
+++ b/src/log_format_loader.cc
@@ -1003,10 +1003,6 @@ write_sample_file()
                 == -1
             || (write(sample_fd.get(), sf.data(), sf.length()) == -1))
         {
-            fprintf(stderr,
-                    "error:unable to write default format file: %s -- %s\n",
-                    sample_path.c_str(),
-                    strerror(errno));
         }
     }
 
@@ -1021,10 +1017,6 @@ write_sample_file()
                 == -1
             || write(sh_fd.get(), sf.data(), sf.length()) == -1)
         {
-            fprintf(stderr,
-                    "error:unable to write default text file: %s -- %s\n",
-                    sh_path.c_str(),
-                    strerror(errno));
         }
     }
 
@@ -1047,10 +1039,6 @@ write_sample_file()
                 == -1
             || write(script_fd.get(), sf.data(), sf.length()) == -1)
         {
-            fprintf(stderr,
-                    "error:unable to write default text file: %s -- %s\n",
-                    script_path.c_str(),
-                    strerror(errno));
         }
     }
 }
diff --git a/src/session_data.cc b/src/session_data.cc
index acc0f7c7..190f5873 100644
--- a/src/session_data.cc
+++ b/src/session_data.cc
@@ -1398,7 +1398,6 @@ save_session_with_id(const std::string& session_id)
     auto view_file_tmp_name = view_file_name.string() + ".tmp";
 
     if ((file = fopen(view_file_tmp_name.c_str(), "w")) == nullptr) {
-        perror("Unable to open session file");
     } else if (nullptr == (handle = yajl_gen_alloc(nullptr))) {
         perror("Unable to create yajl_gen object");
     } else {
